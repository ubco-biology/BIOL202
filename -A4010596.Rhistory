Up_95_CL = t.test(shift, conf.level = 0.95)$conf.int[2]
)
kbl(circadian.stats, caption = "Descriptive statistics for the circadian rythm experiment data",
booktabs = TRUE, digits = c(0, 0, 0, 2, 3, 3, 3, 3)) %>%
kable_styling(latex_options = c("scale_down", "hold_position"), position = "center")
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_jitter(colour = "black", size = 3, shape = 1, width = 0.1) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_jitter(colour = "black", size = 3, shape = 1, width = 0.1) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_jitter(colour = "black", size = 3, shape = 1, width = 0.1) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position = position_nudge(x = 0.15)) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_jitter(colour = "darkgrey", size = 3, shape = 1, width = 0.1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position = position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "black", size = 3,
position=position_nudge(x = 0.15)) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
students <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/students.csv")
students %>%
ggplot(aes(x = Dominant_eye, y = height_cm)) +
geom_violin() +
geom_jitter(colour = "grey", size = 1, shape = 1, width = 0.15) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position = position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "black", size = 3,
position=position_nudge(x = 0.15)) +
xlab("Dominant eye") +
ylab("Height (cm)") +
theme_bw()
students %>%
ggplot(aes(x = Dominant_eye, y = height_cm)) +
geom_violin() +
geom_jitter(colour = "grey", size = 1, shape = 1, width = 0.15) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1) +
stat_summary(fun = mean, geom = "point",
colour = "black", size = 3) +
xlab("Dominant eye") +
ylab("Height (cm)") +
theme_bw()
variance.check <- leveneTest(shift ~ treatment, data = circadian)
variance.check
circadian.lm <- lm(shift ~ treatment, data = circadian)
circadian.lm.anova <- anova(circadian.lm)
circadian.lm.anova
library(broom)
?broom
circadian.lm.anova.new <- broom(circadian.lm.anova)
library(tidymodels)
install.packages("tidymodels")
library(tidymodels)
library(tidyverse)
library(knitr)
library(naniar)
library(janitor)
library(skimr)
library(car)
library(dlookr)
library(kableExtra)
library(tidymodels)
students <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/students.csv")
circadian <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/circadian.csv")
circadian.lm <- lm(shift ~ treatment, data = circadian)
circadian.lm.anova <- anova(circadian.lm)
circadian.lm.anova
?circadian.lm.anova
circadian.lm.anova
?tidy
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "html")
library(tidyverse)
library(knitr)
library(naniar)
library(janitor)
library(skimr)
library(car)
library(dlookr)
library(kableExtra)
library(broom)
students <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/students.csv")
circadian <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/circadian.csv")
circ.skim <- circadian %>%
skim_without_charts()
kbl(t(circ.skim))
circadian
unique(circadian$treatment)
circadian$treatment <- as.factor(circadian$treatment)
unique(circadian$treatment)
levels(circadian$treatment) <- c("Control", "Eyes", "Knees")
circadian$treatment <- ordered(circadian$treatment, levels = c("Control", "Knees", "Eyes"))
unique(circadian$treatment)
circadian.stats <- circadian %>%
group_by(treatment) %>%
summarise(
Count = n() - naniar::n_miss(shift),
Count_NA = naniar::n_miss(shift),
Mean = mean(shift, na.rm = TRUE),
SD = sd(shift, na.rm = TRUE),
SEM = SD/sqrt(Count),
Low_95_CL = t.test(shift, conf.level = 0.95)$conf.int[1],
Up_95_CL = t.test(shift, conf.level = 0.95)$conf.int[2]
)
kbl(circadian.stats, caption = "Descriptive statistics for the circadian rythm experiment data",
booktabs = TRUE, digits = c(0, 0, 0, 2, 3, 3, 3, 3)) %>%
kable_styling(latex_options = c("scale_down", "hold_position"), position = "center")
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_jitter(colour = "darkgrey", size = 3, shape = 1, width = 0.1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position = position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "black", size = 3,
position=position_nudge(x = 0.15)) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
students %>%
ggplot(aes(x = Dominant_eye, y = height_cm)) +
geom_violin() +
geom_jitter(colour = "grey", size = 1, shape = 1, width = 0.15) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1) +
stat_summary(fun = mean, geom = "point",
colour = "black", size = 3) +
xlab("Dominant eye") +
ylab("Height (cm)") +
theme_bw()
variance.check <- leveneTest(shift ~ treatment, data = circadian)
variance.check
circadian.lm <- lm(shift ~ treatment, data = circadian)
circadian.lm.anova <- anova(circadian.lm)
tidy(circadian.lm.anova)
circadian.lm.anova.tidy <- tidy(circadian.lm.anova)
circadian.lm.anova.tidy
circadian.lm.anova.tidy %>%
select("Sum Sq", "Df", "Mean Sq", "F value", "Pr(>F)")
circadian.lm.anova.tidy
circadian.lm.anova.tidy %>%
select("sumsq", "df", "meansq", "statistic", "p.value")
circadian.lm.anova.new <- circadian.lm.anova.tidy %>%
rename(SS = sumsq, MS = meansq, F = statistic, P_val = p.value)
circadian.lm.anova.new
circadian.lm.anova.tidy <- tidy(circadian.lm.anova)
circadian.lm.anova.tidy
circadian.lm.anova.new <- circadian.lm.anova.tidy %>%
select("term", "sumsq", "df", "meansq", "statistic", "p.value")
circadian.lm.anova.new
circadian.lm.anova.new <- circadian.lm.anova.tidy %>%
rename(Source = term, SS = sumsq, MS = meansq, F = statistic, P_val = p.value)
circadian.lm.anova.new
colSums(circadian.lm.anova.new)
circadian.lm.anova.new
circadian.lm.anova.tidy
circadian.lm.anova.new <- circadian.lm.anova.tidy %>%
rename(Source = term, SS = sumsq, MS = meansq, F = statistic, P_val = p.value)
circadian.lm.anova.new
totals <- circadian.lm.anova.new %>%
mutate(Total.df = sum(df), Total.SS = sum(SS),
MS = NA, F = NA, P_val = NA)
totals
circadian.lm.anova.new <- circadian.lm.anova.tidy %>%
select("term", "sumsq", "df", "meansq", "statistic", "p.value")
circadian.lm.anova.new <- circadian.lm.anova.tidy %>%
rename(Source = term, SS = sumsq, MS = meansq, F = statistic, P_val = p.value)
circadian.lm.anova.new
totals <- data.frame(
df = sum(circadian.lm.anova.new$df),
SS = sum(circadian.lm.anova.new$SS),
MS = NA,
F = NA,
P_val = NA
)
totals
totals <- data.frame(
Source = "Total",
df = sum(circadian.lm.anova.new$df),
SS = sum(circadian.lm.anova.new$SS),
MS = NA,
F = NA,
P_val = NA
)
totals
circadian.lm.anova.new
rbind(circadian.lm.anova.new, totals)
as_tibble(rbind(circadian.lm.anova.new, totals))
create.anova.table <- function(intable){
require(tidyverse) # ensure tidyverse is loaded
# "intable" is a standard output table from the `anova` function
temp.anova <- intable %>%
select("term", "sumsq", "df", "meansq", "statistic", "p.value")  # reorder columns
temp.anova <- temp.anova %>%
rename(Source = term, SS = sumsq, MS = meansq, F = statistic, P_val = p.value) # rename columns
totals <- data.frame(
Source = "Total",
df = sum(temp.anova$df),
SS = sum(temp.anova$SS),
MS = NA,
F = NA,
P_val = NA
)  # calculate totals
nice.anova.table <- as_tibble(rbind(temp.anova, totals)) # generate table
return(nice.anova.table)
}
circadian.lm <- lm(shift ~ treatment, data = circadian)
circadian.lm.anova <- anova(circadian.lm)
create.anova.table(circadian.lm.anova)
circadian.lm.anova <- anova(circadian.lm)
create.anova.table <- function(intable){
require(tidyverse) # ensure tidyverse is loaded
# "intable" is a the object from the `anova` output
temp.anova <- intable %>%
select("term", "sumsq", "df", "meansq", "statistic", "p.value")  # reorder columns
temp.anova <- temp.anova %>%
rename(Source = term, SS = sumsq, MS = meansq, F = statistic, P_val = p.value) # rename columns
totals <- data.frame(
Source = "Total",
df = sum(temp.anova$df),
SS = sum(temp.anova$SS),
MS = NA,
F = NA,
P_val = NA
)  # calculate totals
nice.anova.table <- as_tibble(rbind(temp.anova, totals)) # generate table
return(nice.anova.table)
}
create.anova.table(circadian.lm.anova)
circadian.lm.anova
create.anova.table <- function(intable){
require(tidyverse) # ensure tidyverse is loaded
require(broom) # ensures broom is loaded
tidy.intable <- tidy(intable)
# "intable" is a the object from the `anova` output
temp.anova <- tidy.intable %>%
select("term", "sumsq", "df", "meansq", "statistic", "p.value")  # reorder columns
temp.anova <- temp.anova %>%
rename(Source = term, SS = sumsq, MS = meansq, F = statistic, P_val = p.value) # rename columns
totals <- data.frame(
Source = "Total",
df = sum(temp.anova$df),
SS = sum(temp.anova$SS),
MS = NA,
F = NA,
P_val = NA
)  # calculate totals
nice.anova.table <- as_tibble(rbind(temp.anova, totals)) # generate table
return(nice.anova.table)
}
create.anova.table(circadian.lm.anova)
circadian.lm <- lm(shift ~ treatment, data = circadian)
circadian.lm.anova <- anova(circadian.lm)
circadian.lm.anova
str(circadian.lm.anova)
class(circadian.lm.anova)
class(circadian.lm.anova)[1]
?errorCondition
create.anova.table <- function(intable){
# first check that input table is of class "anova"
if(class(intable)[1] != "anova") stop("Input object not of class 'anova'")
require(tidyverse) # ensure tidyverse is loaded
require(broom) # ensures broom is loaded
tidy.intable <- tidy(intable)
# "intable" is a the object from the `anova` output
temp.anova <- tidy.intable %>%
select("term", "sumsq", "df", "meansq", "statistic", "p.value")  # reorder columns
temp.anova <- temp.anova %>%
rename(Source = term, SS = sumsq, MS = meansq, F = statistic, P_val = p.value) # rename columns
totals <- data.frame(
Source = "Total",
df = sum(temp.anova$df),
SS = sum(temp.anova$SS),
MS = NA,
F = NA,
P_val = NA
)  # calculate totals
nice.anova.table <- as_tibble(rbind(temp.anova, totals)) # generate table
return(nice.anova.table)
}
create.anova.table(circadian.lm)
create.anova.table(circadian.lm.anova)
kbl(nice.anova.table, caption = "ANOVA table for the circadian rythm experiment",
booktabs = TRUE, digits = c(0, 4, 0, 4, 4, 3)) %>%
kable_styling(latex_options = "hold_position", position = "center")
nice.anova.table <- create.anova.table(circadian.lm.anova)
nice.anova.table
kbl(nice.anova.table, caption = "ANOVA table for the circadian rythm experiment",
booktabs = TRUE, digits = c(0, 4, 0, 4, 4, 3)) %>%
kable_styling(latex_options = "hold_position", position = "center")
kbl(nice.anova.table, caption = "ANOVA table for the circadian rythm experiment",
booktabs = TRUE, digits = c(0, 4, 0, 4, 4, 3), align = "rrrrr") %>%
kable_styling(latex_options = "hold_position", position = "center")
options(knitr.kable.NA = '')
kbl(nice.anova.table, caption = "ANOVA table for the circadian rythm experiment",
booktabs = TRUE, digits = c(0, 4, 0, 4, 4, 3), align = "rrrrr") %>%
kable_styling(latex_options = "hold_position", position = "center")
?kable
options(knitr.kable.NA = '')
kbl(nice.anova.table, caption = "ANOVA table for the circadian rythm experiment.",
booktabs = TRUE, digits = c(0, 4, 0, 4, 4, 3), align = "r") %>%
kable_styling(latex_options = "hold_position", position = "center")
nice.anova.table
?TukeyHSD
circadian.aov <- aov(shift ~ treatment, data = circadian)
circadianTukey <- TukeyHSD(circadian.aov, conf.level = 0.95)
circadianTukey
circadianTukey.tidy <- tidy(circadianTukey)
circadianTukey.tidy
circadianTukey.tidy %>%
select(-c(term, null.value))
circadianTukey.tidy %>%
select(-c(term, null.value)) %>%  # take away these two columns
rename(Contrast = "contrast", Difference = "estimate",
Conf_low = "conf.low", Conf_high = "conf.high",
Adj_Pval = "adj.p.value")
circadianTukey.tidy.table <- circadianTukey.tidy %>%
select(-c(term, null.value)) %>%  # take away these two columns
rename(Contrast = "contrast", Difference = "estimate",
Conf_low = "conf.low", Conf_high = "conf.high",
Adj_Pval = "adj.p.value")
kbl(circadianTukey.tidy.table, caption = "Results of a Tukey-Kramer post-hoc test for the circadian rythm experiment.",
booktabs = TRUE, digits = c(0, 3, 4, 4, 3), align = "r") %>%
kable_styling(latex_options = "hold_position", position = "center")
circadian
kbl(circadianTukey.tidy.table, caption = "Results of a Tukey-Kramer post-hoc test for the circadian rythm experiment.",
booktabs = TRUE, digits = c(0, 3, 4, 4, 3), align = "r") %>%
kable_styling(latex_options = "hold_position", position = "center")
circadianTukey.tidy
circadianTukey.tidy.table
circadian.stats
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_jitter(colour = "darkgrey", size = 3, shape = 1, width = 0.1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position = position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "black", size = 3,
position=position_nudge(x = 0.15)) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
circadian.stats <- circadian.stats %>%
mutate(letter = c("a", "a", "b"))
circadian.stats
?annotate
ggplot(circadian, aes(x = treatment, y = shift)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
annotate("text", x = 1:3, y = 1.1, label = c("a", "a", "b")) +
labs(x = "Light treatment", y = "Shift in circadian rhythm (h)") +
theme_classic()
circadian %>%
ggplot(aes(x = treatment, y = shift)) +
geom_jitter(colour = "darkgrey", size = 3, shape = 1, width = 0.1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position = position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "black", size = 3,
position=position_nudge(x = 0.15)) +
xlab("Light treatment") +
ylab("Shift in circadian rhythm (h)") +
theme_classic()
ggplot(circadian, aes(x = treatment, y = shift)) +
geom_point(color = "firebrick", size = 3, shape = 1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
ylim(c(-3.1, 1.2)) +
annotate("text", x = 1:3, y = 1.1, label = c("a", "a", "b")) +
labs(x = "Light treatment", y = "Shift in circadian rhythm (h)") +
theme_classic()
ggplot(circadian, aes(x = treatment, y = shift)) +
geom_jitter(colour = "darkgrey", size = 3, shape = 1, width = 0.1) +
stat_summary(fun.data = mean_se, geom = "errorbar",
colour = "black", width = 0.1,
position=position_nudge(x = 0.15)) +
stat_summary(fun = mean, geom = "point",
colour = "firebrick", size = 3,
position=position_nudge(x = 0.15)) +
ylim(c(-3.1, 1.2)) +
annotate("text", x = 1:3, y = 1.1, label = c("a", "a", "b")) +
labs(x = "Light treatment", y = "Shift in circadian rhythm (h)") +
theme_classic()
bookdown::preview_chapter("13_Comparing_more_than_2_means.Rmd")
bookdown::render_book()
warnings()
bookdown::render_book()
library(tidyverse)
sewage <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/sewage.csv")
sewage
s.diffs <- sewage %>%
pivot_wider(names_from = location, values_from = total_p) %>%
mutate(diffs = Downstream - Upstream)
sewage %>%
pivot_wider(names_from = location, values_from = total_p)
head(sewage)
sewage %>%
pivot_wider(names_from = location, values_from = total_p)
blackbird <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/blackbird.csv")
blackbird %>%
pivot_wider(names_from = time, values_from = Antibody)
sewage
sewage$river <- c(1:10, 1:10)
sewage %>%
pivot_wider(names_from = location, values_from = total_p)
sewage <- sewage[, c(3,1,2)]
sewage
write_csv(sewage, "./data/sewage.csv")
sewage <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/sewage.csv")
sewage %>% pivot_wider(names_from = location, values_from = total_p) %>% mutate(diffs = Downstream - Upstream)
pivot_wider
?pivot_wider
blackbird.diffs <- blackbird %>%
pivot_wider(id_cols = blackbird, names_from = time, values_from = Antibody) %>%
mutate(diffs = After - Before)
blackbird.diffs
bookdown::render_book()
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "html")
library(tidyverse)
library(knitr)
library(naniar)
library(janitor)
library(skimr)
library(car)
library(dlookr)
blackbird <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/blackbird.csv")
students <- read_csv("https://raw.githubusercontent.com/ubco-biology/BIOL202/main/data/students.csv")
blackbird
blackbird.diffs <- blackbird %>%
pivot_wider(id_cols = blackbird, names_from = time, values_from = Antibody) %>%
mutate(diffs = After - Before)
blackbird.diffs
blackbird.diffs %>%
ggplot(aes(x = diffs)) +
geom_histogram(binwidth = 0.1, boundary = -0.3,
color = "black", fill = "lightgrey",) +
xlab("Difference in antibody production rate (after - before) (ln[mOD/min]) 10^-3") +
ylab("Frequency") +
theme_bw()
blackbird %>%
ggplot(aes(x = time, y = Antibody)) +
geom_point(shape = 1, size = 1.5) +
geom_line(aes(group = blackbird), color = "grey") +
theme_bw()
blackbird.diffs %>%
ggplot(aes(sample = diffs)) +
stat_qq(shape = 1, size = 2) +
stat_qq_line() +
xlab("Normal quantile") +
ylab("Antibody production (ln[mOD/min]) 10^-3") +
theme_bw()
shapiro.result <- blackbird.diffs %>%
dlookr::normality(diffs)
shapiro.result
blackbird.ttest <- blackbird.diffs %>%
select(diffs) %>%
t.test(mu = 0, alternative = "two.sided", conf.level = 0.95)
blackbird.ttest
blackbird.ttest$conf.int
blackbird.ttest$statistic
bookdown::render_book()
library(rmdformats)
install.packages("rmdformats")
devtools::install_github("marton-balazs-kovacs/tenzing")
tenzing::run_app()
0.7826 + 0.08333676
temp <- data.frame(x = rep(c("yes", "no"), each = 10), y = rnorm(20))
library(tidyverse)
temp %>% select(x)
temp %>% filter(x == "yes")
